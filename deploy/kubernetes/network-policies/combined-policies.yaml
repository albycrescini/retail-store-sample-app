---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: default
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ui-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ui
      app.kubernetes.io/instance: ui
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: carts
              app.kubernetes.io/instance: carts
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog
              app.kubernetes.io/instance: catalog
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog-mysql
              app.kubernetes.io/instance: catalog-mysql
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: checkout
              app.kubernetes.io/instance: checkout
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: carts
              app.kubernetes.io/instance: carts
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog
              app.kubernetes.io/instance: catalog
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog-mysql
              app.kubernetes.io/instance: catalog-mysql
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: checkout
              app.kubernetes.io/instance: checkout
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-carts-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: carts
      app.kubernetes.io/instance: carts
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ui
              app.kubernetes.io/instance: ui
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog
              app.kubernetes.io/instance: catalog
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: carts-dynamodb
              app.kubernetes.io/instance: carts-dynamodb
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-catalog-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog
      app.kubernetes.io/instance: catalog
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ui
              app.kubernetes.io/instance: ui
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: carts
              app.kubernetes.io/instance: carts
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog-mysql
              app.kubernetes.io/instance: catalog-mysql
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-catalog-mysql-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog-mysql
      app.kubernetes.io/instance: catalog-mysql
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: catalog
              app.kubernetes.io/instance: catalog
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-checkout-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: checkout
      app.kubernetes.io/instance: checkout
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ui
              app.kubernetes.io/instance: ui
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: checkout-redis
              app.kubernetes.io/instance: checkout-redis
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: orders
              app.kubernetes.io/instance: orders
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-orders-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: orders
      app.kubernetes.io/instance: orders
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: checkout
              app.kubernetes.io/instance: checkout
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: orders-postgresql
              app.kubernetes.io/instance: orders-postgresql
              app.kubernetes.io/component: postgresql
              app.kubernetes.io/managed-by: Helm
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-orders-postgresql-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: orders-postgresql
      app.kubernetes.io/instance: orders-postgresql
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/managed-by: Helm
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: orders
              app.kubernetes.io/instance: orders
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-carts-dynamodb-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: carts-dynamodb
      app.kubernetes.io/instance: carts-dynamodb
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: carts
              app.kubernetes.io/instance: carts
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-checkout-redis-traffic
  namespace: default
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: checkout-redis
      app.kubernetes.io/instance: checkout-redis
      app.kubernetes.io/component: service
      app.kubernetes.io/owner: retail-store-sample
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: checkout
              app.kubernetes.io/instance: checkout
              app.kubernetes.io/component: service
              app.kubernetes.io/owner: retail-store-sample
  egress:
    - to:
        - podSelector: {}
  policyTypes:
  - Ingress
  - Egress