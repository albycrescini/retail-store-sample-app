apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-traffic
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress: []
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ui
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ui
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: carts
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: catalog
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: checkout
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: assets
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: carts
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: carts
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: dynamodb

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: checkout
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: checkout
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: redis
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: catalog
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: mysql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: assets
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: assets
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: dynamodb
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: dynamodb
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: carts
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: checkout
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysql
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: mysql
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: catalog
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: orders
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: orders
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: postgresql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgresql
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: postgresql
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: orders