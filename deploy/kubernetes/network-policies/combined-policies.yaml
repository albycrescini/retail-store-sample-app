# Deny all ingress and egress traffic by default
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow Egress for DNS Resolution
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# Allow Ingress and Egress for Catalog Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-catalog-traffic
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
      podSelector: {}
  egress:
  - to:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 8080
---
# Allow Egress for Catalog to Database
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-catalog-db-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 172.20.40.15/32
    ports:
    - protocol: TCP
      port: 3306
---
# Allow Ingress and Egress for UI Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ui-traffic
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ui
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 8080
---
# Allow Ingress and Egress for Orders Service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-orders-traffic
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: orders
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 5672
    - protocol: TCP
      port: 8080
---
# Allow ingress traffic to the carts-dynamodb service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-carts-dynamodb-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: carts
      app.kubernetes.io/component: dynamodb
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: carts
    ports:
    - protocol: TCP
      port: 8000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-port-80
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 80