# Deny all ingress and egress traffic by default
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# Allow DNS traffic for all pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: retail-store-sample-app
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
---
# Allow ingress traffic to the UI service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ui-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ui
  policyTypes:
  - Ingress
  ingress:
  - from:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - protocol: TCP
      port: 8080
---
# Allow egress traffic from the UI service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ui-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: ui
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - protocol: TCP
      port: 80
---
# Allow ingress traffic to the orders service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-orders-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: orders
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
    ports:
    - protocol: TCP
      port: 8080
---
# Allow egress traffic from the orders service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-orders-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: orders
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: orders-postgresql
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: orders-rabbitmq
    ports:
    - protocol: TCP
      port: 5672
    - protocol: TCP
      port: 15672
---
# Allow ingress traffic to the catalog service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-catalog-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
    ports:
    - protocol: TCP
      port: 8080
---
# Allow egress traffic from the catalog service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-catalog-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: catalog
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: catalog-mysql
    ports:
    - protocol: TCP
      port: 3306
---
# Allow ingress traffic to the carts service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-carts-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: carts
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
    ports:
    - protocol: TCP
      port: 8080
---
# Allow egress traffic from the carts service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-carts-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: carts
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: carts-dynamodb
    ports:
    - protocol: TCP
      port: 8000
---
# Allow ingress traffic to the checkout service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-checkout-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: checkout
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
    ports:
    - protocol: TCP
      port: 8080
---
# Allow egress traffic from the checkout service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-checkout-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: checkout
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: checkout-redis
    ports:
    - protocol: TCP
      port: 6379
---
# Allow ingress traffic to the assets service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-assets-ingress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: assets
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: ui
    ports:
    - protocol: TCP
      port: 8080
---
# Allow egress traffic from the assets service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-assets-egress
  namespace: retail-store-sample-app
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: assets
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - protocol: TCP
      port: 80